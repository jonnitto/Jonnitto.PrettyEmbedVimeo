prototype(Jonnitto.PrettyEmbedVimeo:Vimeo) < prototype(Neos.Neos:ContentComponent) {
    contentElement = true

    configuration = ${Configuration.setting('Jonnitto.PrettyEmbedVimeo')}
    image = ${q(node).property('image')}
    maximumWidth = ${this.configuration.maximumWidth}
    videoID = ${q(node).property('videoID')}
    videoID.@process.getIDFromUrl = ${Jonnitto.PrettyEmbedVimeo.parseID(value)}

    lightbox = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'lightbox'
    }
    allowFullScreen = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'allowFullScreen'
    }
    autopause = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'autopause'
    }
    loop = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'loop'
    }
    color = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'color'
    }
    background = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'background'
    }
    muted = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'muted'
    }
    transparent = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'transparent'
    }
    playsinline = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'playsinline'
    }
    previewTitle = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'previewTitle'
    }
    previewByline = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'previewByline'
    }
    previewPortrait = Jonnitto.PrettyEmbedVimeo:GetProperty {
        property = 'previewPortrait'
    }

    // Internal
    thumbnail = ${Jonnitto.PrettyEmbedVimeo.thumbnail(this.videoID)}
    validImage = ${this.thumbnail || this.image}
    renderPlayer = ${this.videoID && this.validImage}
    @if.renderPlayerOrBackend = ${this.renderPlayer || node.context.inBackend}

    renderer = Neos.Fusion:Tag {
        tagName = ${node.context.live ? 'a' : 'div'}
        
        attributes {
            class = Neos.Fusion:RawArray {
                nodeType = 'jonnitto-prettyembedvimeo'
                button = ${props.renderPlayer ? 'jonnitto-prettyembedvimeo__button' : false}
                lightbox = ${props.lightbox ? props.configuration.class.lightbox : props.configuration.class.inline}
            }
            data-fs = ${props.allowFullScreen ? 'true' : 'false'}
            data-embed = Neos.Fusion:Array {
                @if.hasVideoID  = ${props.renderPlayer}
                src             = ${String.replace(props.configuration.url.embed, '%id%', props.videoID)}
                autoplay        = '?autoplay=1'
                loop            = ${props.loop ? '&loop=1' : ''}
                color           = ${props.color ? '&color=' + String.replace(props.color, '#', '') : ''}
                autopause       = ${props.autopause ? '' : '&autopause=0'}
                background      = ${props.background ? '' : '&background=0'}
                muted           = ${props.muted ? '&muted=1' : ''}
                playsinline     = ${props.playsinline ? '' : '&playsinline=0'}
                transparent     = ${props.transparent ? '' : '&transparent=0'}
                previewTitle    = ${props.previewTitle ? '' : '&title=0'}
                previewByline   = ${props.previewByline ? '' : '&byline=0'}
                previewPortrait = ${props.previewPortrait ? '' : '&portrait=0'}
            }
            href = ${String.replace(props.configuration.url.href, '%id%', props.videoID)}
            target = '_blank'
        }
        content = afx`
            <Carbon.Image:Tag
                @key='custom'
                @if.render={props.image && props.videoID}
                asset={props.image}
                maximumWidth={props.maximumWidth}
                class='jonnitto-prettyembedvimeo__costum-preview'
                additionalClass={this.class} />
            <img 
                @key='vimeo'
                @if.render={!props.image && props.thumbnail}
                class='jonnitto-prettyembedvimeo__vimeo-preview'
                src={props.thumbnail} />
            <Jonnitto.PrettyEmbedVimeo:Notification 
                @key='noVideoID'
                @if.render={!props.videoID}
                key='noVideoID' />
            <Jonnitto.PrettyEmbedVimeo:Notification 
                @key='needPreviewImage'
                @if.render={props.videoID && !props.validImage}
                key='needPreviewImage' />
        `
        @process {
            wrapper = Neos.Fusion:Tag {
                @if.render = ${props.configuration.wrapper}
                attributes.class = ${props.configuration.wrapper}
                content = ${value}
            }
        }
    }

    @context.contentElement = ${this.contentElement}
    @process.contentElementWrapping.@if.contentElementWrapping = ${contentElement}
}
